<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Armand-Cezar Mathe</title><link>https://cezarmathe.com/posts/</link><description>Recent content in Posts on Armand-Cezar Mathe</description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt;</copyright><lastBuildDate>Wed, 09 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://cezarmathe.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to manage your dotfiles</title><link>https://cezarmathe.com/posts/2019-01-09-how-to-manage-your-dotfiles/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://cezarmathe.com/posts/2019-01-09-how-to-manage-your-dotfiles/</guid><description>First, a little bit of background. You set up a new computer and chances are you haven&#39;t backed up your dotfiles. What do you do now? You spend hours trying to replicate the workflow and configurations, because someone didn&#39;t take the time to back up his dotfiles. But hey, at least you&#39;re trying now.
Before we start Go through your home directory, ~/.config and other folders that might contain configurations. Also, make sure that you DO NOT include private information like ssh and gnupg keys!</description><content type="html"><![CDATA[<p>First, a little bit of background. You set up a new computer and chances are you haven't backed up your dotfiles. What do you do now? You spend hours trying to replicate the workflow and configurations, because <em>someone</em> didn't take the time to back up his dotfiles. But hey, at least you're trying now.</p>
<h2 id="before-we-start">Before we start</h2>
<p>Go through your home directory, <code>~/.config</code> and other folders that might contain configurations. Also, make sure that you <strong>DO NOT</strong> include private information like ssh and gnupg keys!</p>
<p>Then, create a folder somewhere in your home directory, give it a proper name; this folder is going to be the git repository that keeps track of your dotfiles. Mine is <code>~/Maintenance/dotfiles</code>.</p>
<h2 id="get-stow">Get stow</h2>
<p><a href="https://www.gnu.org/software/stow/">Stow</a> is a tool for managing symbolic links and our second dotfile management tool, along git.</p>
<ul>
<li>
<p>Mac: <code>$ brew install stow</code></p>
</li>
<li>
<p>Ubuntu: <code># apt get stow</code></p>
</li>
<li>
<p>Arch Linux: <code># pacman -S stow</code></p>
</li>
</ul>
<h2 id="the-actual-management">The actual management</h2>
<p>Fire up your terminal of choice, <code>cd</code> to the folder that you just created and run <code>git init</code>, our dotfiles are going to be versioned with git.</p>
<p>Then, create a couple of folders for things that are related, for example, create a folder for bash-related dotfiles, one for vim-related dotfiles, one for zsh-related dotfiles etc. Then, move <strong>the actual dotfiles</strong> from their original location in your home directory into the dotfiles folder and into the correct category; for example, <code>~/.bashrc</code> would go for me to <code>~/Maintenance/dotfiles/.bashrc</code>. Also, make sure that files have their complete path relative to the home directory inside the dotfiles folder, for example <code>~/.config/a_config_file</code> will be moved to <code>~/Maintenance/dotfiles/a_category/a_config_file</code>.</p>
<p>Inside the dotfiles folder, run this command: <code>$ stow -t &quot;${HOME}&quot; bash</code> and look in your home directory. You will see a symlink for <code>.bashrc</code> and for any other file that you placed in the bash category folder.</p>
<p>Continue moving dotfiles and creating categories until you feel you're good to go, then run <code>$ git add -A</code>, <code>$ git commit -a -m &quot;$(date)</code> and <code>$ git push &lt;the_origin.git&gt; master</code> and you're done!</p>
<h2 id="for-your-convenience">For your convenience</h2>
<p>You might want to add these aliases in your <code>.bashrc</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">alias</span> <span class="nv">dotfiles</span><span class="o">=</span><span class="s1">&#39;git --work-tree=/home/&lt;your_user&gt;/Maintenance/dotfiles/ --git-dir=/home/&lt;your_user&gt;/Maintenance/dotfiles/.git&#39;</span>
<span class="nb">alias</span> <span class="nv">stow</span><span class="o">=</span><span class="s1">&#39;stow -t ${HOME}&#39;</span>
</code></pre></div><p>Replace <code>Maintenance/dotfiles</code> with the path that you chose for your setup, but keep the <code>\</code> at the end of the path for the work tree.</p>
<h2 id="my-dotfiles">My dotfiles</h2>
<p>If you'd like to see how my dotfiles are looking, visit <a href="https://github.com/cezarmathe/dotfiles">this</a> repository.</p>
]]></content></item><item><title>Getting myself a website</title><link>https://cezarmathe.com/posts/2019-01-03-getting-myself-a-website/</link><pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate><guid>https://cezarmathe.com/posts/2019-01-03-getting-myself-a-website/</guid><description>It&#39;s a brand new year and I have big plans so far. And one of them is getting an up-and-running website for myself. Here it is.</description><content type="html">&lt;p>It's a brand new year and I have big plans so far. And one of them is getting an up-and-running website for myself. &lt;a href="https://cezarmathe.com">Here it is&lt;/a>.&lt;/p></content></item></channel></rss>